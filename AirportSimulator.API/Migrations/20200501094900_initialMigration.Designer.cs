// <auto-generated />
using AirportSimulator.API.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AirportSimulator.API.Migrations
{
    [DbContext(typeof(AirportDbContext))]
    [Migration("20200501094900_initialMigration")]
    partial class initialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AirportSimulator.API.Models.Flight", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("FlightStateType")
                        .HasColumnType("int");

                    b.Property<int>("StationId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Flights");
                });

            modelBuilder.Entity("AirportSimulator.API.Models.Station", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CurrentFlight")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDepartureFirstStation")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDepartureLastStation")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLandingFirstStation")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLandingLastStation")
                        .HasColumnType("bit");

                    b.Property<bool>("IsOccupied")
                        .HasColumnType("bit");

                    b.Property<string>("NextStations")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Stations");

                    b.HasData(
                        new
                        {
                            Id = 10,
                            CurrentFlight = "",
                            IsDepartureFirstStation = false,
                            IsDepartureLastStation = false,
                            IsLandingFirstStation = true,
                            IsLandingLastStation = false,
                            IsOccupied = false,
                            NextStations = "2"
                        },
                        new
                        {
                            Id = 1,
                            CurrentFlight = "",
                            IsDepartureFirstStation = false,
                            IsDepartureLastStation = false,
                            IsLandingFirstStation = true,
                            IsLandingLastStation = false,
                            IsOccupied = false,
                            NextStations = "2"
                        },
                        new
                        {
                            Id = 2,
                            CurrentFlight = "",
                            IsDepartureFirstStation = false,
                            IsDepartureLastStation = false,
                            IsLandingFirstStation = false,
                            IsLandingLastStation = false,
                            IsOccupied = false,
                            NextStations = "3"
                        },
                        new
                        {
                            Id = 3,
                            CurrentFlight = "",
                            IsDepartureFirstStation = false,
                            IsDepartureLastStation = false,
                            IsLandingFirstStation = false,
                            IsLandingLastStation = false,
                            IsOccupied = false,
                            NextStations = "4"
                        },
                        new
                        {
                            Id = 4,
                            CurrentFlight = "",
                            IsDepartureFirstStation = false,
                            IsDepartureLastStation = true,
                            IsLandingFirstStation = false,
                            IsLandingLastStation = false,
                            IsOccupied = false,
                            NextStations = "5"
                        },
                        new
                        {
                            Id = 5,
                            CurrentFlight = "",
                            IsDepartureFirstStation = false,
                            IsDepartureLastStation = false,
                            IsLandingFirstStation = false,
                            IsLandingLastStation = false,
                            IsOccupied = false,
                            NextStations = "6;7"
                        },
                        new
                        {
                            Id = 6,
                            CurrentFlight = "",
                            IsDepartureFirstStation = true,
                            IsDepartureLastStation = false,
                            IsLandingFirstStation = false,
                            IsLandingLastStation = true,
                            IsOccupied = false,
                            NextStations = "8"
                        },
                        new
                        {
                            Id = 7,
                            CurrentFlight = "",
                            IsDepartureFirstStation = true,
                            IsDepartureLastStation = false,
                            IsLandingFirstStation = false,
                            IsLandingLastStation = true,
                            IsOccupied = false,
                            NextStations = "8"
                        },
                        new
                        {
                            Id = 8,
                            CurrentFlight = "",
                            IsDepartureFirstStation = false,
                            IsDepartureLastStation = false,
                            IsLandingFirstStation = false,
                            IsLandingLastStation = false,
                            IsOccupied = false,
                            NextStations = "4"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
